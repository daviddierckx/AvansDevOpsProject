# Bestandsnaam: .github/workflows/dotnet-ci.yml

name: .NET CI Build, Test, Analyze (SonarCloud - Definitieve Methode)

on:
  push:
    branches: [ master ] # Of 'master'
  pull_request:
    branches: [ master ] 

jobs:
  build-test-analyze:
    name: Build, Test & Analyze
    runs-on: ubuntu-latest

    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

    steps:
    # Stappen 1-5 blijven hetzelfde
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0 

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'

    - name: Cache NuGet packages
      uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Restore dependencies
      run: dotnet restore

    - name: Install SonarScanner
      run: dotnet tool install --global dotnet-sonarscanner

    # Stap 6: SonarScanner 'begin' stap. We gebruiken nu een VAST pad.
    - name: SonarScanner Begin Analysis
      run: |
        dotnet sonarscanner begin \
          /o:"daviddierckx-1" \
          /k:"daviddierckx_AvansDevOpsProject" \
          /d:sonar.host.url="https://sonarcloud.io" \
          /d:sonar.login="${{ env.SONAR_TOKEN }}" \
          /d:sonar.cs.cobertura.reportsPaths="./TestResults/coverage.cobertura.xml" 

    # Stap 7: Code bouwen
    - name: Build project
      run: dotnet build --configuration Release --no-restore

    # Stap 8: Unit Tests uitvoeren
    - name: Run tests with Cobertura coverage
      run: |
        dotnet test \
          --configuration Release \
          --no-build \
          --collect:"XPlat Code Coverage" \
          --results-directory ./TestResults
          
    # NIEUWE STAP: Verplaats het coverage-rapport
    - name: Move coverage report to a predictable location
      run: |
        # Vind het Cobertura-bestand in de willekeurige submap en verplaats het naar de TestResults-hoofdmap
        find ./TestResults -name "coverage.cobertura.xml" -exec mv {} ./TestResults/coverage.cobertura.xml \;

    # Stap 10: SonarScanner 'end' stap
    - name: SonarScanner End Analysis
      run: dotnet sonarscanner end /d:sonar.login="${{ env.SONAR_TOKEN }}"
